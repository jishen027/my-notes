"use strict";(self.webpackChunkmd_note=self.webpackChunkmd_note||[]).push([[1490],{7444:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var o=t(5893),s=t(1151);const c={},r="useContext",i={id:"React/Hooks/useContext",title:"useContext",description:"- what is context ?",source:"@site/docs/React/Hooks/useContext.md",sourceDirName:"React/Hooks",slug:"/React/Hooks/useContext",permalink:"/my-notes/docs/React/Hooks/useContext",draft:!1,unlisted:!1,editUrl:"https://github.com/jishen027/my-notes/tree/main/docs/React/Hooks/useContext.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"useCallback",permalink:"/my-notes/docs/React/Hooks/useCallback"},next:{title:"useEffect Hook",permalink:"/my-notes/docs/React/Hooks/useEffect"}},a={},u=[];function l(n){const e={br:"br",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h1,{id:"usecontext",children:"useContext"}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsxs)(e.p,{children:["what is context ?",(0,o.jsx)(e.br,{}),"\n","context is a way to pass data through the component tree without having to pass props down manually at every level."]}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"useContext is a hook that allows you to use context in a functional component."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"createContext is a function that creates a context object, the context object has two properties: Provider and Consumer."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Provider is a component that allows consuming components to subscribe to context changes."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"Consumer is a component that allows consuming components to subscribe to context changes."}),"\n"]}),"\n",(0,o.jsxs)(e.li,{children:["\n",(0,o.jsx)(e.p,{children:"useContext is a hook that allows you to use context in a functional component."}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-javascript",children:'import React, { useContext } from "react";\n\nconst App = () => {\n  return (\n    <div>\n      <UserContext.Provider value={"John"}>\n        <ComponentA />\n      </UserContext.Provider>\n    </div>\n  );\n};\n\nconst ComponentA = () => {\n  return (\n    <div>\n      <ComponentB />\n    </div>\n  );\n};\n\nconst ComponentB = () => {\n  return (\n    <div>\n      <ComponentC />\n    </div>\n  );\n};\n\nconst ComponentC = () => {\n  const user = useContext(UserContext);\n  return (\n    <div>\n      <div>{user}</div>\n    </div>\n  );\n};\n\nexport default App;\n'})})]})}function d(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(l,{...n})}):l(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>i,a:()=>r});var o=t(7294);const s={},c=o.createContext(s);function r(n){const e=o.useContext(c);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:r(n.components),o.createElement(c.Provider,{value:e},n.children)}}}]);