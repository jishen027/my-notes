"use strict";(self.webpackChunkmd_note=self.webpackChunkmd_note||[]).push([[7668],{5160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>u,toc:()=>c});var i=t(5893),s=t(1151);const o={},r="EventBus in Vue3",u={id:"Vue/Vue_EventBus",title:"EventBus in Vue3",description:"Use mitt as eventBus in vue3 with Inject/Provide",source:"@site/docs/Vue/Vue_EventBus.md",sourceDirName:"Vue",slug:"/Vue/Vue_EventBus",permalink:"/my-notes/docs/Vue/Vue_EventBus",draft:!1,unlisted:!1,editUrl:"https://github.com/jishen027/my-notes/tree/main/docs/docs/Vue/Vue_EventBus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Drag and Drop upload",permalink:"/my-notes/docs/Vue/Drag_and_Drop_upload"},next:{title:"Vue Router",permalink:"/my-notes/docs/Vue/vue-router"}},a={},c=[{value:"Use mitt as eventBus in vue3 with Inject/Provide",id:"use-mitt-as-eventbus-in-vue3-with-injectprovide",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"eventbus-in-vue3",children:"EventBus in Vue3"}),"\n",(0,i.jsx)(n.h2,{id:"use-mitt-as-eventbus-in-vue3-with-injectprovide",children:"Use mitt as eventBus in vue3 with Inject/Provide"}),"\n",(0,i.jsx)(n.p,{children:"step1: install mitt"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npm install mitt\n"})}),"\n",(0,i.jsx)(n.p,{children:"step2: create a mitt instance and provide it"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport mitt from 'mitt'\nconst app = createApp(App)\napp.provide('mitt', mitt())\napp.mount('#app')\n"})}),"\n",(0,i.jsx)(n.p,{children:"step3: inject it in your component and use it to emit event"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// component1.vue\nimport { inject } from 'vue'\nexport default {\n  setup() {\n    const emitter = inject('mitt')\n    const handleClick = () => {\n      emitter.emit('event-name', eventData)\n    }\n    return {\n      handleClick\n    }\n  }\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"step4: inject it in your component and use it to listen event"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"// component2.vue\nimport { inject, onMounted } from 'vue'\nexport default {\n  setup() {\n    const emitter = inject('mitt')\n    const handleEvent = (data) => {\n      console.log(data)\n    }\n    onMounted(() => {\n      emitter.on('event-name', (eventData)=> handleEmit)\n    })\n    return {}\n  }\n}\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>u,a:()=>r});var i=t(7294);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);