"use strict";(self.webpackChunkmd_note=self.webpackChunkmd_note||[]).push([[165],{4938:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var a=t(5893),s=t(1151);const r={},o="Eloquent Mutators and Casting",i={id:"Laravel/Eloquent_Mutators_and_Casting",title:"Eloquent Mutators and Casting",description:"- Accessor",source:"@site/docs/Laravel/Eloquent_Mutators_and_Casting.md",sourceDirName:"Laravel",slug:"/Laravel/Eloquent_Mutators_and_Casting",permalink:"/my-notes/docs/Laravel/Eloquent_Mutators_and_Casting",draft:!1,unlisted:!1,editUrl:"https://github.com/jishen027/my-notes/tree/main/docs/Laravel/Eloquent_Mutators_and_Casting.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"K8S DevOps",permalink:"/my-notes/docs/K8S/k8s_DevOps"},next:{title:"Fortify Setting for Laravel API Server",permalink:"/my-notes/docs/Laravel/Fortify_Laravel"}},l={},u=[];function c(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"eloquent-mutators-and-casting",children:"Eloquent Mutators and Casting"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Accessor"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"An accessor transform an Eloquent attribute value when it is accessed."}),"\n",(0,a.jsx)(n.p,{children:"exanple :  when you want to get the first name and last name of a user, you can use the following code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:'public function getFullNameAttribute()\n{\n    return "{$this->first_name} {$this->last_name}";\n}\n'})}),"\n",(0,a.jsx)(n.p,{children:"Asscessor cashing :  if you want to cash the result of an accessor, you can use the following code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"public function getFullNameAttribute($value)\n{\n    return Attrubute::make(\n      get: fn(string $value) => bcrypt($value),\n    )->shouldCache();\n    // or withoutObjectCashing();\n}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Mutator"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"A mutator transform an Eloquent attribute value when it is set."}),"\n",(0,a.jsx)(n.p,{children:"example :  when you want to set the first name and last name of a user, you can use the following code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"protected functuin firstName(): Attribute\n{\n    return Attribute::make(\n        get: fn(string $value) => ucfirst($value),\n        set: fn(string $value) => strtolower($value),\n    );\n}\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Casting"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Casting is a way to convert an Eloquent attribute value to a native PHP type."}),"\n",(0,a.jsx)(n.p,{children:"example :  when you want to cast the first name and last name of a user, you can use the following code:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-php",children:"protected $casts = [\n    'first_name' => 'string',\n    'last_name' => 'string',\n];\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var a=t(7294);const s={},r=a.createContext(s);function o(e){const n=a.useContext(r);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);