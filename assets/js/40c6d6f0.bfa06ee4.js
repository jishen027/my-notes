"use strict";(self.webpackChunkmd_note=self.webpackChunkmd_note||[]).push([[7668],{5160:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var s=n(5893),i=n(1151);const o={},r="Use mitt as eventBus in vue3 with Inject/Provide",a={id:"Vue/Vue_EventBus",title:"Use mitt as eventBus in vue3 with Inject/Provide",description:"step1: install mitt",source:"@site/docs/Vue/Vue_EventBus.md",sourceDirName:"Vue",slug:"/Vue/Vue_EventBus",permalink:"/docs/Vue/Vue_EventBus",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Vue/Vue_EventBus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Drag_and_Drop_upload",permalink:"/docs/Vue/Drag_and_Drop_upload"},next:{title:"vue-router",permalink:"/docs/Vue/vue-router"}},c={},u=[];function p(e){const t={code:"code",h1:"h1",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"use-mitt-as-eventbus-in-vue3-with-injectprovide",children:"Use mitt as eventBus in vue3 with Inject/Provide"}),"\n",(0,s.jsx)(t.p,{children:"step1: install mitt"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"npm install mitt\n"})}),"\n",(0,s.jsx)(t.p,{children:"step2: create a mitt instance and provide it"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport mitt from 'mitt'\nconst app = createApp(App)\napp.provide('mitt', mitt())\napp.mount('#app')\n"})}),"\n",(0,s.jsx)(t.p,{children:"step3: inject it in your component and use it to emit event"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// component1.vue\nimport { inject } from 'vue'\nexport default {\n  setup() {\n    const emitter = inject('mitt')\n    const handleClick = () => {\n      emitter.emit('event-name', eventData)\n    }\n    return {\n      handleClick\n    }\n  }\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"step4: inject it in your component and use it to listen event"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// component2.vue\nimport { inject, onMounted } from 'vue'\nexport default {\n  setup() {\n    const emitter = inject('mitt')\n    const handleEvent = (data) => {\n      console.log(data)\n    }\n    onMounted(() => {\n      emitter.on('event-name', (eventData)=> handleEmit)\n    })\n    return {}\n  }\n}\n"})})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>r});var s=n(7294);const i={},o=s.createContext(i);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);