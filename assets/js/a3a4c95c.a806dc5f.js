"use strict";(self.webpackChunkmd_note=self.webpackChunkmd_note||[]).push([[2169],{714:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var s=n(5893),t=n(1151);const r={},c="AWS IoT",o={id:"AWS/IOT/Started_With_AWS_IoT",title:"AWS IoT",description:"IoT Services",source:"@site/docs/AWS/IOT/Started_With_AWS_IoT.md",sourceDirName:"AWS/IOT",slug:"/AWS/IOT/Started_With_AWS_IoT",permalink:"/my-notes/docs/AWS/IOT/Started_With_AWS_IoT",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AWS/IOT/Started_With_AWS_IoT.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"EKSCTL",permalink:"/my-notes/docs/AWS/EKS/eks-ctl"},next:{title:"Set up S3 with Node.js",permalink:"/my-notes/docs/AWS/S3/Set_up_with_node"}},l={},d=[{value:"IoT Services",id:"iot-services",level:2},{value:"Oerview",id:"oerview",level:2},{value:"Message Broker",id:"message-broker",level:2},{value:"Device Shadow",id:"device-shadow",level:2},{value:"Rules",id:"rules",level:2},{value:"Security and identity",id:"security-and-identity",level:2},{value:"Device registry",id:"device-registry",level:2}];function a(e){const i={h1:"h1",h2:"h2",img:"img",li:"li",p:"p",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"aws-iot",children:"AWS IoT"}),"\n",(0,s.jsx)(i.h2,{id:"iot-services",children:"IoT Services"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Annlytics"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"IoT SiteWise"}),"\n",(0,s.jsx)(i.li,{children:"IoT Events"}),"\n",(0,s.jsx)(i.li,{children:"IoT Analytics"}),"\n",(0,s.jsx)(i.li,{children:"IoT TwinMaker"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Control services"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"IoT Core"}),"\n",(0,s.jsx)(i.li,{children:"IoT Device Defender"}),"\n",(0,s.jsx)(i.li,{children:"IoT Device Management"}),"\n",(0,s.jsx)(i.li,{children:"IoT Things Graph"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(i.li,{children:["\n",(0,s.jsx)(i.p,{children:"Device software"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"FreeRTOS"}),"\n",(0,s.jsx)(i.li,{children:"Greengrass"}),"\n",(0,s.jsx)(i.li,{children:"IoT Device SDK"}),"\n",(0,s.jsx)(i.li,{children:"IoT Device Tester"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"oerview",children:"Oerview"}),"\n",(0,s.jsx)(i.p,{children:(0,s.jsx)(i.img,{alt:"alt text",src:n(5953).Z+"",width:"1234",height:"614"})}),"\n",(0,s.jsx)(i.h2,{id:"message-broker",children:"Message Broker"}),"\n",(0,s.jsx)(i.p,{children:"To publish and receive message from each other devices."}),"\n",(0,s.jsx)(i.h2,{id:"device-shadow",children:"Device Shadow"}),"\n",(0,s.jsx)(i.p,{children:"To store the current state of each device. allows user to communicate with devices even when they are offline."}),"\n",(0,s.jsx)(i.h2,{id:"rules",children:"Rules"}),"\n",(0,s.jsx)(i.p,{children:"To connect data from the message broker to other AWS services."}),"\n",(0,s.jsx)(i.h2,{id:"security-and-identity",children:"Security and identity"}),"\n",(0,s.jsx)(i.p,{children:"To provide shared responsibility for security in the cloud."}),"\n",(0,s.jsx)(i.h2,{id:"device-registry",children:"Device registry"}),"\n",(0,s.jsx)(i.p,{children:"Is a database to store information about each device."})]})}function h(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},5953:(e,i,n)=>{n.d(i,{Z:()=>s});const s=n.p+"assets/images/image-1-262cafa549f03bbbc2923e8a6a7d1195.png"},1151:(e,i,n)=>{n.d(i,{Z:()=>o,a:()=>c});var s=n(7294);const t={},r=s.createContext(t);function c(e){const i=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:i},e.children)}}}]);