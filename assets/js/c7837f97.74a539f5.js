"use strict";(self.webpackChunkmd_note=self.webpackChunkmd_note||[]).push([[2358],{7197:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>d});var i=r(5893),s=r(1151);const c={},l="Docker Environment Variables",a={id:"Docker/Docker-env-var",title:"Docker Environment Variables",description:"Environment Varialbes",source:"@site/docs/Docker/Docker-env-var.md",sourceDirName:"Docker",slug:"/Docker/Docker-env-var",permalink:"/my-notes/docs/Docker/Docker-env-var",draft:!1,unlisted:!1,editUrl:"https://github.com/jishen027/my-notes/tree/main/docs/Docker/Docker-env-var.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Docker Command",permalink:"/my-notes/docs/Docker/Docker-Command"},next:{title:"Docker composer",permalink:"/my-notes/docs/Docker/Docker_compose"}},o={},d=[{value:"Environment Varialbes",id:"environment-varialbes",level:2},{value:"inspect environment varialbe",id:"inspect-environment-varialbe",level:2},{value:"Docker commnad",id:"docker-commnad",level:2},{value:"Docker Append a commnad",id:"docker-append-a-commnad",level:2},{value:"Run - attach and detach",id:"run---attach-and-detach",level:2},{value:"Run -tag",id:"run--tag",level:2},{value:"Run STDIN",id:"run-stdin",level:2},{value:"Run PORT mapping",id:"run-port-mapping",level:2},{value:"RUN Volume mapping",id:"run-volume-mapping",level:2},{value:"Container logs",id:"container-logs",level:2}];function t(n){const e={br:"br",h1:"h1",h2:"h2",li:"li",p:"p",ul:"ul",...(0,s.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"docker-environment-variables",children:"Docker Environment Variables"}),"\n",(0,i.jsx)(e.h2,{id:"environment-varialbes",children:"Environment Varialbes"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"color = os.environ.get('APP_COLOR')"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"export APP_COLOR=buld; python app.py"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"docker run -e APP_COLOR=blue app-name"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"docker run -e APP_COLOR=black app-name"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"docker run -e APP_COLOR=red app-name"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"inspect-environment-varialbe",children:"inspect environment varialbe"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"docker inspect container-name"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"docker-commnad",children:"Docker commnad"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker run nigix",(0,i.jsx)(e.br,{}),"\n","start a container"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker ps",(0,i.jsx)(e.br,{}),"\n","list current running containers"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker ps -a",(0,i.jsx)(e.br,{}),"\n","list all containers"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker stop container_name",(0,i.jsx)(e.br,{}),"\n","stop a container"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker rm container_name",(0,i.jsx)(e.br,{}),"\n","remove a container"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker images",(0,i.jsx)(e.br,{}),"\n","list all images"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker rmi image_name",(0,i.jsx)(e.br,{}),"\n","remove a image (image should not running for a container)"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker pull image",(0,i.jsx)(e.br,{}),"\n","only pull the image, not runing"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"docker-append-a-commnad",children:"Docker Append a commnad"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker run ubuntu sleep 5",(0,i.jsx)(e.br,{}),"\n","sleep is append command"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker exec container_name cat /etc/hosts",(0,i.jsx)(e.br,{}),"\n","append a command into a running container"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"run---attach-and-detach",children:"Run - attach and detach"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker run -d container_name/app_name",(0,i.jsx)(e.br,{}),"\n","will run container in background"]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["docker attach container_id(a043d)",(0,i.jsx)(e.br,{}),"\n","will attach back the container"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"run--tag",children:"Run -tag"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["docker run redis:4.0",(0,i.jsx)(e.br,{}),"\n",":4.0 is a version tag for redis"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"run-stdin",children:"Run STDIN"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"docker run -i container_name/app_name"}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"docker run -it container_name/app_name"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"run-port-mapping",children:"Run PORT mapping"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"docker run -p 80:5000 container_name/webapp"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"run-volume-mapping",children:"RUN Volume mapping"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"docker run -v /opt/datadir:/var/lib/mysql mysql"}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"container-logs",children:"Container logs"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"docker logs container_name"}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(t,{...n})}):t(n)}},1151:(n,e,r)=>{r.d(e,{Z:()=>a,a:()=>l});var i=r(7294);const s={},c=i.createContext(s);function l(n){const e=i.useContext(c);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),i.createElement(c.Provider,{value:e},n.children)}}}]);